/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GuestRouteImport } from './routes/_guest/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as GuestResetPasswordRouteImport } from './routes/_guest/reset-password/route'
import { Route as AuthUsersRouteImport } from './routes/_auth/users/route'
import { Route as AuthResearchAddRouteImport } from './routes/_auth/research/add/route'
import { Route as AuthResearchResearchIdRouteImport } from './routes/_auth/research/$researchId/route'
import { Route as AuthMachineryParametersAddRouteImport } from './routes/_auth/machinery-parameters/add/route'
import { Route as AuthUsersIndexRouteImport } from './routes/_auth/users/index/route'
import { Route as AuthResearchIndexRouteImport } from './routes/_auth/research/index/route'
import { Route as AuthMachineryParametersIndexRouteImport } from './routes/_auth/machinery-parameters/index/route'
import { Route as AuthMachineriesIndexRouteImport } from './routes/_auth/machineries/index/route'
import { Route as AuthResearchResearchIdEditRouteImport } from './routes/_auth/research/$researchId/edit/route'
import { Route as AuthMachineryParametersMachineryParameterIdEditRouteImport } from './routes/_auth/machinery-parameters/$machineryParameterId.edit/route'
import { Route as AuthMachineriesMachineryIdEditRouteImport } from './routes/_auth/machineries/$machineryId.edit/route'
import { Route as AuthResearchResearchIdIndexRouteImport } from './routes/_auth/research/$researchId/index/route'
import { Route as AuthResearchResearchIdExperimentsAddRouteImport } from './routes/_auth/research/$researchId/experiments/add/route'
import { Route as AuthResearchResearchIdExperimentsExperimentIdRouteImport } from './routes/_auth/research/$researchId/experiments/$experimentId/route'
import { Route as AuthResearchResearchIdExperimentsExperimentIdEditRouteImport } from './routes/_auth/research/$researchId/experiments/$experimentId/edit/route'
import { Route as AuthResearchResearchIdExperimentsExperimentIdIndexRouteImport } from './routes/_auth/research/$researchId/experiments/$experimentId/index/route'

// Create Virtual Routes

const AuthIndexLazyImport = createFileRoute('/_auth/')()
const GuestLoginLazyImport = createFileRoute('/_guest/login')()
const GuestForgotPasswordLazyImport = createFileRoute(
  '/_guest/forgot-password',
)()
const AuthEditProfileLazyImport = createFileRoute('/_auth/edit-profile')()
const AuthUsersAddLazyImport = createFileRoute('/_auth/users/add')()
const AuthMachineriesAddLazyImport = createFileRoute('/_auth/machineries/add')()

// Create/Update Routes

const GuestRouteRoute = GuestRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_guest/route.lazy').then((d) => d.Route))

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_auth/route.lazy').then((d) => d.Route))

const AuthIndexLazyRoute = AuthIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() => import('./routes/_auth/index.lazy').then((d) => d.Route))

const GuestLoginLazyRoute = GuestLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => GuestRouteRoute,
} as any).lazy(() => import('./routes/_guest/login.lazy').then((d) => d.Route))

const GuestForgotPasswordLazyRoute = GuestForgotPasswordLazyImport.update({
  path: '/forgot-password',
  getParentRoute: () => GuestRouteRoute,
} as any).lazy(() =>
  import('./routes/_guest/forgot-password.lazy').then((d) => d.Route),
)

const AuthEditProfileLazyRoute = AuthEditProfileLazyImport.update({
  path: '/edit-profile',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/edit-profile.lazy').then((d) => d.Route),
)

const GuestResetPasswordRouteRoute = GuestResetPasswordRouteImport.update({
  path: '/reset-password',
  getParentRoute: () => GuestRouteRoute,
} as any).lazy(() =>
  import('./routes/_guest/reset-password/route.lazy').then((d) => d.Route),
)

const AuthUsersRouteRoute = AuthUsersRouteImport.update({
  path: '/users',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthUsersAddLazyRoute = AuthUsersAddLazyImport.update({
  path: '/add',
  getParentRoute: () => AuthUsersRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/users/add.lazy').then((d) => d.Route),
)

const AuthMachineriesAddLazyRoute = AuthMachineriesAddLazyImport.update({
  path: '/machineries/add',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/machineries/add.lazy').then((d) => d.Route),
)

const AuthResearchAddRouteRoute = AuthResearchAddRouteImport.update({
  path: '/research/add',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/research/add/route.lazy').then((d) => d.Route),
)

const AuthResearchResearchIdRouteRoute =
  AuthResearchResearchIdRouteImport.update({
    path: '/research/$researchId',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/research/$researchId/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthMachineryParametersAddRouteRoute =
  AuthMachineryParametersAddRouteImport.update({
    path: '/machinery-parameters/add',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/machinery-parameters/add/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthUsersIndexRouteRoute = AuthUsersIndexRouteImport.update({
  path: '/',
  getParentRoute: () => AuthUsersRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/users/index/route.lazy').then((d) => d.Route),
)

const AuthResearchIndexRouteRoute = AuthResearchIndexRouteImport.update({
  path: '/research/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/research/index/route.lazy').then((d) => d.Route),
)

const AuthMachineryParametersIndexRouteRoute =
  AuthMachineryParametersIndexRouteImport.update({
    path: '/machinery-parameters/',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/machinery-parameters/index/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthMachineriesIndexRouteRoute = AuthMachineriesIndexRouteImport.update({
  path: '/machineries/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/machineries/index/route.lazy').then((d) => d.Route),
)

const AuthResearchResearchIdEditRouteRoute =
  AuthResearchResearchIdEditRouteImport.update({
    path: '/edit',
    getParentRoute: () => AuthResearchResearchIdRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/research/$researchId/edit/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthMachineryParametersMachineryParameterIdEditRouteRoute =
  AuthMachineryParametersMachineryParameterIdEditRouteImport.update({
    path: '/machinery-parameters/$machineryParameterId/edit',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/machinery-parameters/$machineryParameterId.edit/route.lazy'
    ).then((d) => d.Route),
  )

const AuthMachineriesMachineryIdEditRouteRoute =
  AuthMachineriesMachineryIdEditRouteImport.update({
    path: '/machineries/$machineryId/edit',
    getParentRoute: () => AuthRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/machineries/$machineryId.edit/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthResearchResearchIdIndexRouteRoute =
  AuthResearchResearchIdIndexRouteImport.update({
    path: '/',
    getParentRoute: () => AuthResearchResearchIdRouteRoute,
  } as any).lazy(() =>
    import('./routes/_auth/research/$researchId/index/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthResearchResearchIdExperimentsAddRouteRoute =
  AuthResearchResearchIdExperimentsAddRouteImport.update({
    path: '/experiments/add',
    getParentRoute: () => AuthResearchResearchIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/research/$researchId/experiments/add/route.lazy'
    ).then((d) => d.Route),
  )

const AuthResearchResearchIdExperimentsExperimentIdRouteRoute =
  AuthResearchResearchIdExperimentsExperimentIdRouteImport.update({
    path: '/experiments/$experimentId',
    getParentRoute: () => AuthResearchResearchIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/research/$researchId/experiments/$experimentId/route.lazy'
    ).then((d) => d.Route),
  )

const AuthResearchResearchIdExperimentsExperimentIdEditRouteRoute =
  AuthResearchResearchIdExperimentsExperimentIdEditRouteImport.update({
    path: '/edit',
    getParentRoute: () =>
      AuthResearchResearchIdExperimentsExperimentIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/research/$researchId/experiments/$experimentId/edit/route.lazy'
    ).then((d) => d.Route),
  )

const AuthResearchResearchIdExperimentsExperimentIdIndexRouteRoute =
  AuthResearchResearchIdExperimentsExperimentIdIndexRouteImport.update({
    path: '/',
    getParentRoute: () =>
      AuthResearchResearchIdExperimentsExperimentIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_auth/research/$researchId/experiments/$experimentId/index/route.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/users': {
      id: '/_auth/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthUsersRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_guest/reset-password': {
      id: '/_guest/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof GuestResetPasswordRouteImport
      parentRoute: typeof GuestRouteImport
    }
    '/_auth/edit-profile': {
      id: '/_auth/edit-profile'
      path: '/edit-profile'
      fullPath: '/edit-profile'
      preLoaderRoute: typeof AuthEditProfileLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_guest/forgot-password': {
      id: '/_guest/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof GuestForgotPasswordLazyImport
      parentRoute: typeof GuestRouteImport
    }
    '/_guest/login': {
      id: '/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginLazyImport
      parentRoute: typeof GuestRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/machineries/': {
      id: '/_auth/machineries/'
      path: '/machineries'
      fullPath: '/machineries'
      preLoaderRoute: typeof AuthMachineriesIndexRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/machinery-parameters/': {
      id: '/_auth/machinery-parameters/'
      path: '/machinery-parameters'
      fullPath: '/machinery-parameters'
      preLoaderRoute: typeof AuthMachineryParametersIndexRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/research/': {
      id: '/_auth/research/'
      path: '/research'
      fullPath: '/research'
      preLoaderRoute: typeof AuthResearchIndexRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/users/': {
      id: '/_auth/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof AuthUsersIndexRouteImport
      parentRoute: typeof AuthUsersRouteImport
    }
    '/_auth/machinery-parameters/add': {
      id: '/_auth/machinery-parameters/add'
      path: '/machinery-parameters/add'
      fullPath: '/machinery-parameters/add'
      preLoaderRoute: typeof AuthMachineryParametersAddRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/research/$researchId': {
      id: '/_auth/research/$researchId'
      path: '/research/$researchId'
      fullPath: '/research/$researchId'
      preLoaderRoute: typeof AuthResearchResearchIdRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/research/add': {
      id: '/_auth/research/add'
      path: '/research/add'
      fullPath: '/research/add'
      preLoaderRoute: typeof AuthResearchAddRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/machineries/add': {
      id: '/_auth/machineries/add'
      path: '/machineries/add'
      fullPath: '/machineries/add'
      preLoaderRoute: typeof AuthMachineriesAddLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/users/add': {
      id: '/_auth/users/add'
      path: '/add'
      fullPath: '/users/add'
      preLoaderRoute: typeof AuthUsersAddLazyImport
      parentRoute: typeof AuthUsersRouteImport
    }
    '/_auth/research/$researchId/': {
      id: '/_auth/research/$researchId/'
      path: '/'
      fullPath: '/research/$researchId/'
      preLoaderRoute: typeof AuthResearchResearchIdIndexRouteImport
      parentRoute: typeof AuthResearchResearchIdRouteImport
    }
    '/_auth/machineries/$machineryId/edit': {
      id: '/_auth/machineries/$machineryId/edit'
      path: '/machineries/$machineryId/edit'
      fullPath: '/machineries/$machineryId/edit'
      preLoaderRoute: typeof AuthMachineriesMachineryIdEditRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/machinery-parameters/$machineryParameterId/edit': {
      id: '/_auth/machinery-parameters/$machineryParameterId/edit'
      path: '/machinery-parameters/$machineryParameterId/edit'
      fullPath: '/machinery-parameters/$machineryParameterId/edit'
      preLoaderRoute: typeof AuthMachineryParametersMachineryParameterIdEditRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/research/$researchId/edit': {
      id: '/_auth/research/$researchId/edit'
      path: '/edit'
      fullPath: '/research/$researchId/edit'
      preLoaderRoute: typeof AuthResearchResearchIdEditRouteImport
      parentRoute: typeof AuthResearchResearchIdRouteImport
    }
    '/_auth/research/$researchId/experiments/$experimentId': {
      id: '/_auth/research/$researchId/experiments/$experimentId'
      path: '/experiments/$experimentId'
      fullPath: '/research/$researchId/experiments/$experimentId'
      preLoaderRoute: typeof AuthResearchResearchIdExperimentsExperimentIdRouteImport
      parentRoute: typeof AuthResearchResearchIdRouteImport
    }
    '/_auth/research/$researchId/experiments/add': {
      id: '/_auth/research/$researchId/experiments/add'
      path: '/experiments/add'
      fullPath: '/research/$researchId/experiments/add'
      preLoaderRoute: typeof AuthResearchResearchIdExperimentsAddRouteImport
      parentRoute: typeof AuthResearchResearchIdRouteImport
    }
    '/_auth/research/$researchId/experiments/$experimentId/': {
      id: '/_auth/research/$researchId/experiments/$experimentId/'
      path: '/'
      fullPath: '/research/$researchId/experiments/$experimentId/'
      preLoaderRoute: typeof AuthResearchResearchIdExperimentsExperimentIdIndexRouteImport
      parentRoute: typeof AuthResearchResearchIdExperimentsExperimentIdRouteImport
    }
    '/_auth/research/$researchId/experiments/$experimentId/edit': {
      id: '/_auth/research/$researchId/experiments/$experimentId/edit'
      path: '/edit'
      fullPath: '/research/$researchId/experiments/$experimentId/edit'
      preLoaderRoute: typeof AuthResearchResearchIdExperimentsExperimentIdEditRouteImport
      parentRoute: typeof AuthResearchResearchIdExperimentsExperimentIdRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRouteRoute: AuthRouteRoute.addChildren({
    AuthUsersRouteRoute: AuthUsersRouteRoute.addChildren({
      AuthUsersIndexRouteRoute,
      AuthUsersAddLazyRoute,
    }),
    AuthEditProfileLazyRoute,
    AuthIndexLazyRoute,
    AuthMachineriesIndexRouteRoute,
    AuthMachineryParametersIndexRouteRoute,
    AuthResearchIndexRouteRoute,
    AuthMachineryParametersAddRouteRoute,
    AuthResearchResearchIdRouteRoute:
      AuthResearchResearchIdRouteRoute.addChildren({
        AuthResearchResearchIdIndexRouteRoute,
        AuthResearchResearchIdEditRouteRoute,
        AuthResearchResearchIdExperimentsExperimentIdRouteRoute:
          AuthResearchResearchIdExperimentsExperimentIdRouteRoute.addChildren({
            AuthResearchResearchIdExperimentsExperimentIdIndexRouteRoute,
            AuthResearchResearchIdExperimentsExperimentIdEditRouteRoute,
          }),
        AuthResearchResearchIdExperimentsAddRouteRoute,
      }),
    AuthResearchAddRouteRoute,
    AuthMachineriesAddLazyRoute,
    AuthMachineriesMachineryIdEditRouteRoute,
    AuthMachineryParametersMachineryParameterIdEditRouteRoute,
  }),
  GuestRouteRoute: GuestRouteRoute.addChildren({
    GuestResetPasswordRouteRoute,
    GuestForgotPasswordLazyRoute,
    GuestLoginLazyRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_guest"
      ]
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/users",
        "/_auth/edit-profile",
        "/_auth/",
        "/_auth/machineries/",
        "/_auth/machinery-parameters/",
        "/_auth/research/",
        "/_auth/machinery-parameters/add",
        "/_auth/research/$researchId",
        "/_auth/research/add",
        "/_auth/machineries/add",
        "/_auth/machineries/$machineryId/edit",
        "/_auth/machinery-parameters/$machineryParameterId/edit"
      ]
    },
    "/_guest": {
      "filePath": "_guest/route.tsx",
      "children": [
        "/_guest/reset-password",
        "/_guest/forgot-password",
        "/_guest/login"
      ]
    },
    "/_auth/users": {
      "filePath": "_auth/users/route.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/users/",
        "/_auth/users/add"
      ]
    },
    "/_guest/reset-password": {
      "filePath": "_guest/reset-password/route.tsx",
      "parent": "/_guest"
    },
    "/_auth/edit-profile": {
      "filePath": "_auth/edit-profile.lazy.tsx",
      "parent": "/_auth"
    },
    "/_guest/forgot-password": {
      "filePath": "_guest/forgot-password.lazy.tsx",
      "parent": "/_guest"
    },
    "/_guest/login": {
      "filePath": "_guest/login.lazy.tsx",
      "parent": "/_guest"
    },
    "/_auth/": {
      "filePath": "_auth/index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/machineries/": {
      "filePath": "_auth/machineries/index/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/machinery-parameters/": {
      "filePath": "_auth/machinery-parameters/index/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/research/": {
      "filePath": "_auth/research/index/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/": {
      "filePath": "_auth/users/index/route.tsx",
      "parent": "/_auth/users"
    },
    "/_auth/machinery-parameters/add": {
      "filePath": "_auth/machinery-parameters/add/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/research/$researchId": {
      "filePath": "_auth/research/$researchId/route.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/research/$researchId/",
        "/_auth/research/$researchId/edit",
        "/_auth/research/$researchId/experiments/$experimentId",
        "/_auth/research/$researchId/experiments/add"
      ]
    },
    "/_auth/research/add": {
      "filePath": "_auth/research/add/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/machineries/add": {
      "filePath": "_auth/machineries/add.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/add": {
      "filePath": "_auth/users/add.lazy.tsx",
      "parent": "/_auth/users"
    },
    "/_auth/research/$researchId/": {
      "filePath": "_auth/research/$researchId/index/route.tsx",
      "parent": "/_auth/research/$researchId"
    },
    "/_auth/machineries/$machineryId/edit": {
      "filePath": "_auth/machineries/$machineryId.edit/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/machinery-parameters/$machineryParameterId/edit": {
      "filePath": "_auth/machinery-parameters/$machineryParameterId.edit/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/research/$researchId/edit": {
      "filePath": "_auth/research/$researchId/edit/route.tsx",
      "parent": "/_auth/research/$researchId"
    },
    "/_auth/research/$researchId/experiments/$experimentId": {
      "filePath": "_auth/research/$researchId/experiments/$experimentId/route.tsx",
      "parent": "/_auth/research/$researchId",
      "children": [
        "/_auth/research/$researchId/experiments/$experimentId/",
        "/_auth/research/$researchId/experiments/$experimentId/edit"
      ]
    },
    "/_auth/research/$researchId/experiments/add": {
      "filePath": "_auth/research/$researchId/experiments/add/route.tsx",
      "parent": "/_auth/research/$researchId"
    },
    "/_auth/research/$researchId/experiments/$experimentId/": {
      "filePath": "_auth/research/$researchId/experiments/$experimentId/index/route.tsx",
      "parent": "/_auth/research/$researchId/experiments/$experimentId"
    },
    "/_auth/research/$researchId/experiments/$experimentId/edit": {
      "filePath": "_auth/research/$researchId/experiments/$experimentId/edit/route.tsx",
      "parent": "/_auth/research/$researchId/experiments/$experimentId"
    }
  }
}
ROUTE_MANIFEST_END */
