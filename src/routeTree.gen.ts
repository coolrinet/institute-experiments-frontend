/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GuestImport } from './routes/_guest'
import { Route as AuthImport } from './routes/_auth'
import { Route as GuestResetPasswordImport } from './routes/_guest/reset-password'
import { Route as AuthUsersImport } from './routes/_auth/users'
import { Route as AuthUsersIndexImport } from './routes/_auth/users/index'
import { Route as AuthMachineryParametersIndexImport } from './routes/_auth/machinery-parameters/index'
import { Route as AuthMachineriesIndexImport } from './routes/_auth/machineries/index'
import { Route as AuthMachineryParametersAddImport } from './routes/_auth/machinery-parameters/add'
import { Route as AuthMachineryParametersMachineryParameterIdEditImport } from './routes/_auth/machinery-parameters/$machineryParameterId.edit'
import { Route as AuthMachineriesMachineryIdEditImport } from './routes/_auth/machineries/$machineryId.edit'

// Create Virtual Routes

const AuthIndexLazyImport = createFileRoute('/_auth/')()
const GuestLoginLazyImport = createFileRoute('/_guest/login')()
const GuestForgotPasswordLazyImport = createFileRoute(
  '/_guest/forgot-password',
)()
const AuthAboutLazyImport = createFileRoute('/_auth/about')()
const AuthUsersAddLazyImport = createFileRoute('/_auth/users/add')()
const AuthMachineriesAddLazyImport = createFileRoute('/_auth/machineries/add')()

// Create/Update Routes

const GuestRoute = GuestImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexLazyRoute = AuthIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/index.lazy').then((d) => d.Route))

const GuestLoginLazyRoute = GuestLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => GuestRoute,
} as any).lazy(() => import('./routes/_guest/login.lazy').then((d) => d.Route))

const GuestForgotPasswordLazyRoute = GuestForgotPasswordLazyImport.update({
  path: '/forgot-password',
  getParentRoute: () => GuestRoute,
} as any).lazy(() =>
  import('./routes/_guest/forgot-password.lazy').then((d) => d.Route),
)

const AuthAboutLazyRoute = AuthAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/about.lazy').then((d) => d.Route))

const GuestResetPasswordRoute = GuestResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => GuestRoute,
} as any)

const AuthUsersRoute = AuthUsersImport.update({
  path: '/users',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersIndexRoute = AuthUsersIndexImport.update({
  path: '/',
  getParentRoute: () => AuthUsersRoute,
} as any)

const AuthMachineryParametersIndexRoute =
  AuthMachineryParametersIndexImport.update({
    path: '/machinery-parameters/',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthMachineriesIndexRoute = AuthMachineriesIndexImport.update({
  path: '/machineries/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersAddLazyRoute = AuthUsersAddLazyImport.update({
  path: '/add',
  getParentRoute: () => AuthUsersRoute,
} as any).lazy(() =>
  import('./routes/_auth/users/add.lazy').then((d) => d.Route),
)

const AuthMachineriesAddLazyRoute = AuthMachineriesAddLazyImport.update({
  path: '/machineries/add',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/machineries/add.lazy').then((d) => d.Route),
)

const AuthMachineryParametersAddRoute = AuthMachineryParametersAddImport.update(
  {
    path: '/machinery-parameters/add',
    getParentRoute: () => AuthRoute,
  } as any,
)

const AuthMachineryParametersMachineryParameterIdEditRoute =
  AuthMachineryParametersMachineryParameterIdEditImport.update({
    path: '/machinery-parameters/$machineryParameterId/edit',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthMachineriesMachineryIdEditRoute =
  AuthMachineriesMachineryIdEditImport.update({
    path: '/machineries/$machineryId/edit',
    getParentRoute: () => AuthRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestImport
      parentRoute: typeof rootRoute
    }
    '/_auth/users': {
      id: '/_auth/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthUsersImport
      parentRoute: typeof AuthImport
    }
    '/_guest/reset-password': {
      id: '/_guest/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof GuestResetPasswordImport
      parentRoute: typeof GuestImport
    }
    '/_auth/about': {
      id: '/_auth/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthAboutLazyImport
      parentRoute: typeof AuthImport
    }
    '/_guest/forgot-password': {
      id: '/_guest/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof GuestForgotPasswordLazyImport
      parentRoute: typeof GuestImport
    }
    '/_guest/login': {
      id: '/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginLazyImport
      parentRoute: typeof GuestImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/machinery-parameters/add': {
      id: '/_auth/machinery-parameters/add'
      path: '/machinery-parameters/add'
      fullPath: '/machinery-parameters/add'
      preLoaderRoute: typeof AuthMachineryParametersAddImport
      parentRoute: typeof AuthImport
    }
    '/_auth/machineries/add': {
      id: '/_auth/machineries/add'
      path: '/machineries/add'
      fullPath: '/machineries/add'
      preLoaderRoute: typeof AuthMachineriesAddLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/add': {
      id: '/_auth/users/add'
      path: '/add'
      fullPath: '/users/add'
      preLoaderRoute: typeof AuthUsersAddLazyImport
      parentRoute: typeof AuthUsersImport
    }
    '/_auth/machineries/': {
      id: '/_auth/machineries/'
      path: '/machineries'
      fullPath: '/machineries'
      preLoaderRoute: typeof AuthMachineriesIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/machinery-parameters/': {
      id: '/_auth/machinery-parameters/'
      path: '/machinery-parameters'
      fullPath: '/machinery-parameters'
      preLoaderRoute: typeof AuthMachineryParametersIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/': {
      id: '/_auth/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof AuthUsersIndexImport
      parentRoute: typeof AuthUsersImport
    }
    '/_auth/machineries/$machineryId/edit': {
      id: '/_auth/machineries/$machineryId/edit'
      path: '/machineries/$machineryId/edit'
      fullPath: '/machineries/$machineryId/edit'
      preLoaderRoute: typeof AuthMachineriesMachineryIdEditImport
      parentRoute: typeof AuthImport
    }
    '/_auth/machinery-parameters/$machineryParameterId/edit': {
      id: '/_auth/machinery-parameters/$machineryParameterId/edit'
      path: '/machinery-parameters/$machineryParameterId/edit'
      fullPath: '/machinery-parameters/$machineryParameterId/edit'
      preLoaderRoute: typeof AuthMachineryParametersMachineryParameterIdEditImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthUsersRoute: AuthUsersRoute.addChildren({
      AuthUsersAddLazyRoute,
      AuthUsersIndexRoute,
    }),
    AuthAboutLazyRoute,
    AuthIndexLazyRoute,
    AuthMachineryParametersAddRoute,
    AuthMachineriesAddLazyRoute,
    AuthMachineriesIndexRoute,
    AuthMachineryParametersIndexRoute,
    AuthMachineriesMachineryIdEditRoute,
    AuthMachineryParametersMachineryParameterIdEditRoute,
  }),
  GuestRoute: GuestRoute.addChildren({
    GuestResetPasswordRoute,
    GuestForgotPasswordLazyRoute,
    GuestLoginLazyRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_guest"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/users",
        "/_auth/about",
        "/_auth/",
        "/_auth/machinery-parameters/add",
        "/_auth/machineries/add",
        "/_auth/machineries/",
        "/_auth/machinery-parameters/",
        "/_auth/machineries/$machineryId/edit",
        "/_auth/machinery-parameters/$machineryParameterId/edit"
      ]
    },
    "/_guest": {
      "filePath": "_guest.tsx",
      "children": [
        "/_guest/reset-password",
        "/_guest/forgot-password",
        "/_guest/login"
      ]
    },
    "/_auth/users": {
      "filePath": "_auth/users.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/users/add",
        "/_auth/users/"
      ]
    },
    "/_guest/reset-password": {
      "filePath": "_guest/reset-password.tsx",
      "parent": "/_guest"
    },
    "/_auth/about": {
      "filePath": "_auth/about.lazy.tsx",
      "parent": "/_auth"
    },
    "/_guest/forgot-password": {
      "filePath": "_guest/forgot-password.lazy.tsx",
      "parent": "/_guest"
    },
    "/_guest/login": {
      "filePath": "_guest/login.lazy.tsx",
      "parent": "/_guest"
    },
    "/_auth/": {
      "filePath": "_auth/index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/machinery-parameters/add": {
      "filePath": "_auth/machinery-parameters/add.tsx",
      "parent": "/_auth"
    },
    "/_auth/machineries/add": {
      "filePath": "_auth/machineries/add.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/add": {
      "filePath": "_auth/users/add.lazy.tsx",
      "parent": "/_auth/users"
    },
    "/_auth/machineries/": {
      "filePath": "_auth/machineries/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/machinery-parameters/": {
      "filePath": "_auth/machinery-parameters/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/": {
      "filePath": "_auth/users/index.tsx",
      "parent": "/_auth/users"
    },
    "/_auth/machineries/$machineryId/edit": {
      "filePath": "_auth/machineries/$machineryId.edit.tsx",
      "parent": "/_auth"
    },
    "/_auth/machinery-parameters/$machineryParameterId/edit": {
      "filePath": "_auth/machinery-parameters/$machineryParameterId.edit.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
